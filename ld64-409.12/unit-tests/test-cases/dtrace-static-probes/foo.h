/*
 * Generated by dtrace(1M).
 */

#ifndef	_FOO_H
#define	_FOO_H

#include <unistd.h>

#ifdef	__cplusplus
extern "C" {
#endif

#define FOO_STABILITY "___dtrace_stability$Foo$v1$1_1_0_1_1_0_1_1_0_1_1_0_5_5_5"

#define FOO_TYPEDEFS "___dtrace_typedefs$Foo$v2$77656972645479706532"

#if !defined(DTRACE_PROBES_DISABLED) || !DTRACE_PROBES_DISABLED

#define	FOO_COUNT1(arg0) \
do { \
	__asm__ volatile(".reference " FOO_TYPEDEFS); \
	__dtrace_probe$Foo$count1$v1$77656972645479706532(arg0); \
	__asm__ volatile(".reference " FOO_STABILITY); \
} while (0)
#define	FOO_COUNT1_ENABLED() \
	({ int _r = __dtrace_isenabled$Foo$count1$v1(); \
		__asm__ volatile(""); \
		_r; })


extern void __dtrace_probe$Foo$count1$v1$77656972645479706532(weirdType2);
extern int __dtrace_isenabled$Foo$count1$v1(void);

#else

#define	FOO_COUNT1(arg0) \
do { \
	} while (0)
#define	FOO_COUNT1_ENABLED() (0)

#endif /* !defined(DTRACE_PROBES_DISABLED) || !DTRACE_PROBES_DISABLED */


#ifdef	__cplusplus
}
#endif

#endif	/* _FOO_H */
